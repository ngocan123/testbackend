{"version":3,"sources":["views/Register.js","views/Login.js","views/product/Product.js","views/product/CreateProduct.js","views/product/EditProduct.js","axioConfig.js","views/Home.js","App.js","serviceWorker.js","index.js"],"names":["$this","axioApi","axios","create","baseURL","timeout","withCredentials","Home","localStorage","getItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","location","redirectfrom","assertThisInitialized","state","posts","keyword","tags","alltags","page","limit","react_default","a","createElement","Component","Register","email","password","name","e","setState","target","value","preventDefault","user","post","qs","stringify","then","res","history","push","onSubmit","handleSubmit","className","onChange","handleNameChange","type","id","aria-describedby","placeholder","handleEmailChange","handlePasswordChange","Login","asioApi","data","auth","setItem","token","defaults","headers","common","pathname","catch","err","alert","console","log","saveRegister","Product","products","author","getDatas","get","_id","map","i","key","description","react_router_dom","to","onClick","deletePost","tabRows","CreatePost","tagsSelectChange","selectedtag","postdata","t","label","changeTitle","changeDescription","Creatable_default","isClearable","options","isMulti","savePost","EditPost","match","params","obj","setTimeout","App","loginorlogout","href","logout","removeItem","registerOrPost","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","Divider","react_router","exact","path","component","CreateProduct","EditProduct","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e41f5836.chunk.js","sourcesContent":["//lets me coppy \r\nimport React, { Component } from 'react';\r\nimport axioApi from './../axioConfig';\r\nimport qs from 'qs';\r\nlet $this;\r\nclass Register extends Component {\r\n    // this function is used for page setup work or If you want to start doing in page start do this\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t// especially it used for state declaration\r\n\t\tthis.state = {email:'', password:'', name:''}  // state is declaring data that used in this page. and it's connecting with view and if it is change, the view also reflect and also change. something like autobinding\r\n\t\t$this = this; // this is need because we cant find this in other function, need to record component this\r\n\t}\r\n\r\n\thandleNameChange(e){  // this function need to use in react, because if something change in view, need to set data to state\r\n\t\t$this.setState({\r\n\t\t\tname : e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\thandleEmailChange(e){\r\n\t\t$this.setState({\r\n\t\t\temail : e.target.value\r\n\t\t})\t\r\n\t}\r\n\r\n\thandlePasswordChange(e){\r\n\t\t$this.setState({\r\n\t\t\tpassword : e.target.value\r\n\t\t})\t\r\n\t}\r\n\thandleSubmit(e){\r\n\t\te.preventDefault(); // prevent to go page refresh\r\n\t\tconst user = {email:$this.state.email, password:$this.state.password, name:$this.state.name}\r\n\t\t//console.log(user);\r\n\t\t// send ajax with axio\r\n\t\taxioApi.post(\"/admin/store\", qs.stringify(user)).then((res) => {\r\n\t\t\t// in this case, we cant use this, we can conflict with axio this. that's why use $this that we recorded. is just component this\r\n\t\t\t// react router redirect to page programatically reference from https://tylermcginnis.com/react-router-programmatically-navigate/ \t\t\t\r\n\t\t\t// lets check network, all right\r\n\t\t\t$this.props.history.push('/login'); // code for redirect login\r\n\t\t\t// lets run\r\n\t\t});\r\n\t}\r\n  render() {\r\n    return (\r\n        <div>\r\n            <h2>Đăng ký</h2>\r\n            <br/>\r\n            <form onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label>Name</label>\r\n                <input onChange={this.handleNameChange} type=\"text\" className=\"form-control\" id=\"exampleInputName1\" aria-describedby=\"nameHelp\" placeholder=\"Enter name\" />\t\t\t\t\t\t\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input onChange={this.handleEmailChange} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\t\t\t\t\t\t\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input onChange={this.handlePasswordChange} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n            </div>\t\t\t\t\t\r\n            <button type=\"submit\"  className=\"btn btn-primary\">Submit</button>\t\r\n            </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default Register;","import React, { Component } from 'react';\r\nimport asioApi from './../axioConfig';\r\nimport qs from 'qs';\r\nimport axioApi from './../axioConfig';\r\nlet $this;\r\nclass Login extends Component {\r\n    constructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {email:'', password:''}\r\n\t\t$this = this;\r\n\t}\r\n\thandleEmailChange(e){\r\n\t\t$this.setState({\r\n\t\t\temail : e.target.value\r\n\t\t})\t\r\n\t}\r\n\thandlePasswordChange(e){\r\n\t\t$this.setState({\r\n\t\t\tpassword : e.target.value\r\n\t\t})\t\r\n\t}\r\n\tsaveRegister(e){\r\n\t\te.preventDefault();\r\n\t\tconst user = {email:$this.state.email, password:$this.state.password}\r\n\t\tasioApi.post(\"auth/login\", qs.stringify(user)).then((res) => {\r\n            // here we go// success login\r\n            if(res.data.auth == true){\r\n                // store in localStorage\r\n                localStorage.setItem('token', res.data.token);\r\n                // set axios header\r\n                axioApi.defaults.headers.common['x-access-token'] = res.data.token;\r\n                $this.props.history.push({\r\n                    pathname: '/',\r\n                    //search: '?query=abc',\r\n                    redirectfrom: 'login'\r\n                })\r\n                  \r\n            }\r\n\t\t\t\r\n\t\t}).catch((err) => {\r\n            alert(\"Username password mismatch\");\r\n            console.log(err);\r\n        });\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n        <div>\r\n        <form onSubmit={this.saveRegister}>\r\n            <br/>\r\n            <h2>Login</h2>\t\t\t\t\t\r\n            <br/>\r\n            <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input onChange={this.handleEmailChange} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\t\t\t\t\t\t\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input onChange={this.handlePasswordChange} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n            </div>\t\t\t\t\t\r\n            <button type=\"submit\"  className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;","import React, { Component } from 'react';\r\nimport axioApi from './../../axioConfig';\r\nimport { Link } from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n// const mapStateToProps = state => {\r\n//     return{\r\n//         posts : state.postreducer.posts  // redux_step4 getting data from store and connect with view\r\n//     }\r\n// }\r\nlet $this;\r\nclass Product extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {'products':[], author: ''};\r\n        $this = this;\r\n    }\r\n    componentDidMount(){\r\n        this.getDatas();\r\n        // setTimeout(function(){\r\n        //     axioApi.get('auth/checkToken').then((res) => {\r\n        //         $this.setState({\r\n        //             'author': res.data.id\r\n        //         });\r\n        //         $this.getDatas();\r\n        //         console.log(res.data.id);\r\n        //     }).catch((err) => {\r\n        //         $this.props.history.push('/login');\r\n        //     });\r\n        // },1500);\r\n    }\r\n    getDatas(){\r\n        axioApi.get('/product/getAll?author='+$this.state.author).then((res) => {\r\n            console.log(res);\r\n            $this.setState({ 'products' : res.data });\r\n            //console.log($this.state.author);\r\n        });\r\n    }\r\n    deletePost(id){\r\n        axioApi.post('/product/remove', {_id:id}).then( (res) => {\r\n            $this.getDatas()\r\n        });\r\n    }\r\n    tabRows(){\r\n        return $this.state.products.map(function(post, i){\r\n            return <tr key={i}>\r\n                        <td>{post.name}</td>\r\n                        <td>{post.description}</td>\r\n                        <td>{post.author?post.author.email:'Chưa xác định'}</td>\r\n                        <td>\r\n                            <Link className=\"nav-link\" to={\"/edit-product/\"+post._id}>\r\n                                <button className=\"btn btn-sm btn-success\">Sửa</button>\r\n                            </Link>\r\n                            <button className=\"btn btn-sm btn-danger inline\" onClick={() => $this.deletePost(post._id)}>Xóa</button>\r\n                        </td>\r\n                    </tr>\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header-content clearfix\">\r\n                    <h1>Danh sách sản phẩm</h1>\r\n                    <Link className=\"nav-link\" to='/create/product'><button className=\"btn btn-sm btn-success flor\">Thên sản phẩm</button></Link>\r\n                </div>\r\n                <div className=\"h15\"></div>\r\n                <table className=\"table table-hover table-border\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Tên</th>\r\n                            <th>Mô tả</th>\r\n                            <th>Danh mục</th>\r\n                            <th>Trạng thái</th>\r\n                            <th>Hành động</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.tabRows()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Product;","import React, { Component } from 'react';\r\nimport axioApi from './../../axioConfig';\r\nimport qs from 'qs';\r\nimport CreatableSelect from 'react-select/lib/Creatable';\r\n\r\nlet $this;\r\nclass CreatePost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {name : '', description : '', tags : [], alltags : [], author : ''}\r\n\t\t$this = this; \r\n    }\r\n    changeTitle(e){\r\n        $this.setState({ name : e.target.value });\r\n    }\r\n    changeDescription(e){\r\n        $this.setState({ description : e.target.value });\r\n    }\r\n    tagsSelectChange = (selectedtag) => {\r\n        $this.setState({ tags : selectedtag });\r\n    }\r\n    componentDidMount(){\r\n        axioApi.get('/product/getAllTags').then((res) => {\r\n            $this.setState({\r\n                alltags : res.data\r\n            });\r\n        });\r\n        // setTimeout(function(){\r\n        //     axioApi.get('/auth/checkToken').then((res) => {\r\n        //         console.log(res.data);\r\n        //         $this.setState({\r\n        //             author: res.data.id\r\n        //         });\r\n        //     }).catch((err) => {\r\n        //         $this.props.history.push('/login');\r\n        //     });\r\n        // }, 1500);\r\n    }\r\n    savePost(){\r\n        const postdata = {\r\n            name : $this.state.name,\r\n            description : $this.state.description,\r\n            tags : $this.state.tags,\r\n            author : $this.state.author,\r\n        }\r\n        postdata.tags = postdata.tags.map(function(t){\r\n            return t.label;\r\n        })\r\n        //console.log(postdata);\r\n        axioApi.post('/product/saveProductAndTag', postdata).then((res) => {\r\n            $this.props.history.push('/product');\r\n        });\r\n    }\r\n    \r\n  render() {\r\n    return (\r\n      \t<div>\r\n      \t\t<hr/>\r\n            <h1>Thêm sản phẩm</h1>\r\n            \r\n                <br/>\r\n                <div className=\"form-group\">\r\n                    <label>Title</label>\r\n                    <input onChange={this.changeTitle} name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" aria-describedby=\"name\" placeholder=\"Enter name\" />\t\t\t\t\t\t\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <input onChange={this.changeDescription}  name=\"description\" type=\"email\" className=\"form-control\" id=\"description\" aria-describedby=\"description\" placeholder=\"Enter Description\" />\t\t\t\t\t\t\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Tags</label>\r\n                    {/* <Select\r\n                        value={selectedOption}\r\n                        onChange={this.handleChange}\r\n                        options={$this.state.tags}\r\n                        isMulti = {true}\r\n                    /> */}\r\n                    {/* <CreatableSelect\r\n                    isMulti\r\n                    onChange={this.handleChange}\r\n                    options={$this.state.tags}\r\n                    /> */}\r\n                    <CreatableSelect\r\n                        isClearable\r\n                        onChange={this.tagsSelectChange}\r\n                        //onInputChange={this.handleInputChange}\r\n                        options={this.state.alltags}\r\n                        isMulti = {true}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" onClick={this.savePost} className=\"btn btn-primary\">Submit</button>\r\n            <hr/>\r\n      \t</div>\r\n    );\r\n  }\r\n}\r\nexport default CreatePost;","import React, { Component } from 'react';\r\nimport axioApi from './../../axioConfig';\r\nimport qs from 'qs';\r\nimport CreatableSelect from 'react-select/lib/Creatable';\r\n\r\nlet $this;\r\nclass EditPost extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {_id: '', name : '', description : '', tags : [], alltags : [], author : ''}\r\n\t\t$this = this; \r\n    }\r\n    changeTitle(e){\r\n        $this.setState({ name : e.target.value });\r\n    }\r\n    changeDescription(e){\r\n        $this.setState({ description : e.target.value });\r\n    }\r\n    tagsSelectChange = (selectedtag) => {\r\n        $this.setState({ tags : selectedtag });\r\n    }\r\n    componentDidMount(){\r\n        $this.setState({\r\n            _id: $this.props.match.params.id\r\n        });\r\n        axioApi.get('/product/show/'+$this.props.match.params.id).then((res) => {\r\n            const tags = res.data.tags.map(function(obj, i){\r\n                return {value: obj._id, label:obj.label};\r\n            });\r\n            //console.log(tags);\r\n            $this.setState({\r\n                name: res.data.name,\r\n                description: res.data.description,\r\n                tags:tags\r\n            });\r\n        });\r\n        axioApi.get('/product/getAllTags').then((res) => {\r\n            $this.setState({\r\n                alltags : res.data\r\n            });\r\n        });\r\n        setTimeout(function(){\r\n            axioApi.get('/auth/checkToken').then((res) => {\r\n                //console.log(res.data);\r\n                $this.setState({\r\n                    author: res.data.id\r\n                });\r\n            }).catch((err) => {\r\n                $this.props.history.push('/login');\r\n            });\r\n        }, 1500);\r\n    }\r\n    savePost(){\r\n        const postdata = {\r\n            _id : $this.state._id,\r\n            name : $this.state.name,\r\n            description : $this.state.description,\r\n            tags : $this.state.tags,\r\n            author : $this.state.author,\r\n        }\r\n        postdata.tags = postdata.tags.map(function(t){\r\n            return t.label;\r\n        })\r\n        axioApi.post('/product/saveProductAndTagAsync', postdata).then((res) => {\r\n            $this.props.history.push('/product');\r\n        });\r\n    }\r\n  render() {\r\n    return (\r\n      \t<div>\r\n      \t\t<hr/>\r\n            <h1>Edit sản phẩm</h1>\r\n            \r\n                <br/>\r\n                <div className=\"form-group\">\r\n                    <label>Title</label>\r\n                    <input value={$this.state.name} onChange={this.changeTitle} name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" aria-describedby=\"name\" placeholder=\"Enter name\" />\t\t\t\t\t\t\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <input value={$this.state.description} onChange={this.changeDescription}  name=\"description\" type=\"email\" className=\"form-control\" id=\"description\" aria-describedby=\"description\" placeholder=\"Enter Description\" />\t\t\t\t\t\t\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Tags</label>\r\n                    {/* <Select\r\n                        value={selectedOption}\r\n                        onChange={this.handleChange}\r\n                        options={$this.state.tags}\r\n                        isMulti = {true}\r\n                    /> */}\r\n                    {/* <CreatableSelect\r\n                    isMulti\r\n                    onChange={this.handleChange}\r\n                    options={$this.state.tags}\r\n                    /> */}\r\n                    <CreatableSelect\r\n                        isClearable\r\n                        onChange={this.tagsSelectChange}\r\n                        //onInputChange={this.handleInputChange}\r\n                        options={this.state.alltags}\r\n                        isMulti = {true}\r\n                        value = {$this.state.tags}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" onClick={this.savePost} className=\"btn btn-primary\">Submit</button>\r\n            <hr/>\r\n      \t</div>\r\n    );\r\n  }\r\n}\r\nexport default EditPost;","import axios from 'axios';\r\nconst axioApi = axios.create({  \r\n    baseURL: 'http://localhost:3008/api/',\r\n    //baseURL: 'https://mern-stack-course.herokuapp.com/api/',  // let our base uri is server uri\r\n    //baseURL: 'https://jsonplaceholder.typicode.com/',\r\n    timeout: 10000,\r\n    withCredentials: true,\r\n    //transformRequest: [(data) => JSON.stringify(data.data)],\r\n    // headers: {\r\n    // \t'Accept': 'application/json',\r\n    // \t'Content-Type': 'application/json',\r\n    // }\r\n    });\r\nexport default axioApi","//lets me coppy \r\nimport React, { Component } from 'react';\r\nimport axioApi from '../axioConfig';\r\nlet $this;\r\nlet token = localStorage.getItem('token');\r\nclass Home extends Component {\r\n    constructor(props){\r\n\t\tsuper(props);\r\n\t\tconst redirectfrom = this.props.location.redirectfrom;\r\n\t\t// if(redirectfrom=='login'){\r\n\t\t// \twindow.location.reload();\r\n\t\t// }\r\n\t\t$this = this;\r\n\t\tthis.state = {posts:[], keyword:'', tags:[], alltags:[], page:1, limit:5}\r\n\t}\r\n    componentDidMount(){\r\n        // setTimeout(function(){\r\n        //     axioApi.get('auth/checkToken').then((res) => {\r\n        //         console.log(res.data);\r\n        //     }).catch((err) => {\r\n        //         $this.props.history.push('/login');\r\n        //     });\r\n        // }, 1500);\r\n    }\r\n\r\n    \r\n\t// componentDidMount(){\t\t\r\n\t// \t//this.getPosts()\r\n\t// \t//this.getTags()\r\n\t// \tdocument.addEventListener('scroll', this.trackScrolling);\r\n\t// \t//document.getElementById('Loading').style.display = \"none\";\r\n\t// }\r\n\t// componentWillUnmount(){\r\n\t// \tdocument.removeEventListener('scroll', this.trackScrolling);\r\n    // }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Trang chủ</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, NavDropdown, Nav} from 'react-bootstrap';\nimport './App.css';\nimport './index.css';\n//import SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nimport { Switch, Route, BrowserRouter, Link } from 'react-router-dom'\nimport Home from './views/Home.js';\nimport Register from './views/Register';\nimport Login from './views/Login';\nimport Product from './views/product/Product';\nimport CreateProduct from './views/product/CreateProduct';\nimport EditProduct from './views/product/EditProduct';\nlet token = localStorage.getItem('token');\nclass App extends Component {\n  ShowLogin(){\n    let loginorlogout = <Link className=\"nav-link\" to='/login'>Đăng nhập</Link>;\n    if(token){\n      loginorlogout = <a className=\"nav-link\" href=\"/login\" onClick={this.logout}>Đăng xuất</a>;\n    }\n    return loginorlogout;\n  }\n  logout(){\n    localStorage.removeItem('token');\n    this.history.push('/login');\n  }\n  showRegisterOrPost(){\n    let registerOrPost = <Link className=\"nav-link\" to='/register'>Đăng ký</Link>;\n    if(token){\n      registerOrPost = <Link className=\"nav-link\" to='/product'>Sản phẩm</Link>;\n    }\n    return registerOrPost;\n  }\n  render() {\n    return (<div>\n              <div className=\"container\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                  <Navbar.Brand>\n                    <Link className=\"nav-link\" to=\"/\">Dashboard</Link>\n                  </Navbar.Brand>\n                  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                  <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <NavDropdown title=\"Quản lý tài khoản\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item>\n                          <Link to=\"/product\">Danh sách sản phẩm</Link>\n                        </NavDropdown.Item>\n                        <NavDropdown.Item>\n                          <Link to=\"/catproduct\">Danh mục sản phẩm</Link>\n                        </NavDropdown.Item>\n                        <NavDropdown.Item>\n                          <Link>Nhà sản xuất</Link>\n                        </NavDropdown.Item>\n                      </NavDropdown>\n\n                      <NavDropdown title=\"Quản lý sản phẩm\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item>\n                          <Link to=\"/product\">Danh sách sản phẩm</Link>\n                        </NavDropdown.Item>\n                        <NavDropdown.Item>\n                          <Link to=\"/catproduct\">Danh mục sản phẩm</Link>\n                        </NavDropdown.Item>\n                        <NavDropdown.Item>\n                          <Link to=\"/\">Nhà sản xuất</Link>\n                        </NavDropdown.Item>\n                      </NavDropdown>\n\n                      <NavDropdown title=\"Cấu hình hệ thống\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item>\n                          <Link to=\"/\">Cài đặt chung</Link>\n                        </NavDropdown.Item>\n                        <NavDropdown.Item>\n                          <Link to=\"/\">Danh mục sản phẩm</Link>\n                        </NavDropdown.Item>\n                        <NavDropdown.Item>\n                          <Link to=\"/\">Nhà sản xuất</Link>\n                        </NavDropdown.Item>\n                      </NavDropdown>\n\n                      <NavDropdown title=\"Thông tin cá nhân\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item>\n                          <Link to=\"/\">Cài đặt chung</Link>\n                        </NavDropdown.Item>\n                        <NavDropdown.Item>\n                          <Link to=\"/\">Danh mục sản phẩm</Link>\n                        </NavDropdown.Item>\n                        <NavDropdown.Item>\n                          <Link to=\"/\">Nhà sản xuất</Link>\n                        </NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item>\n                          <Link to=\"/\">Nhà sản xuất</Link>\n                        </NavDropdown.Item>\n                      </NavDropdown>\n                    </Nav>\n                  </Navbar.Collapse>\n                </Navbar>\n            \n                <Switch>\n                    <Route exact path=\"/\" component = {Home} />\n                    <Route path=\"/register\" component = {Register} />\n                    <Route path=\"/auth/login\" component = {Login} />\n                    <Route path=\"/product\" component = {Product} />\n                    <Route path=\"/create/product\" component = {CreateProduct} />\n                    <Route path=\"/edit/product/:id\" component = {EditProduct} />\n                </Switch>\n              </div>\n            </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport axioApi from './axioConfig';\n\nlet token = localStorage.getItem('token');            \nif(token){\n\taxioApi.defaults.headers.common['x-access-token'] = localStorage.getItem('token');           \n\taxioApi.get('auth/checkToken').then((res) => { \n        localStorage.setItem('user_id', res.data.id);\n\t}).catch((err) => {\n        localStorage.removeItem('token');   \n    });\n}\n\nReactDOM.render(<BrowserRouter>\n    <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}